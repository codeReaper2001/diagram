<mxfile host="65bd71144e">
    <diagram id="hx34elsw-V2J5PnfQkFj" name="第 1 页">
        <mxGraphModel dx="964" dy="665" grid="1" gridSize="10" guides="1" tooltips="1" connect="1" arrows="1" fold="1" page="1" pageScale="1" pageWidth="827" pageHeight="1169" math="0" shadow="0">
            <root>
                <mxCell id="0"/>
                <mxCell id="1" parent="0"/>
                <mxCell id="4" style="edgeStyle=none;html=1;exitX=1;exitY=0.5;exitDx=0;exitDy=0;entryX=0;entryY=0.5;entryDx=0;entryDy=0;sketch=1;" parent="1" source="2" target="3" edge="1">
                    <mxGeometry relative="1" as="geometry"/>
                </mxCell>
                <mxCell id="2" value="强引用" style="rounded=0;whiteSpace=wrap;html=1;comic=1;fillColor=#ffe6cc;strokeColor=#d79b00;" parent="1" vertex="1">
                    <mxGeometry x="190" y="107.5" width="80" height="30" as="geometry"/>
                </mxCell>
                <mxCell id="3" value="&lt;div style=&quot;text-align: left&quot;&gt;&lt;span&gt;一般使用的引用类型变量就是强引用，例如：&lt;/span&gt;&lt;/div&gt;&lt;div style=&quot;text-align: left&quot;&gt;&lt;span&gt;Object obj = new Object()&lt;/span&gt;&lt;/div&gt;&lt;div style=&quot;text-align: left&quot;&gt;&lt;span&gt;此时obj变量就拥有对堆中创建的Object对象有强引用关系&lt;/span&gt;&lt;/div&gt;" style="rounded=0;whiteSpace=wrap;html=1;comic=1;fillColor=#ffe6cc;strokeColor=#d79b00;sketch=1;" parent="1" vertex="1">
                    <mxGeometry x="330" y="90" width="250" height="65" as="geometry"/>
                </mxCell>
                <mxCell id="6" style="edgeStyle=none;html=1;exitX=1;exitY=0.5;exitDx=0;exitDy=0;entryX=0;entryY=0.5;entryDx=0;entryDy=0;sketch=1;" parent="1" source="5" target="2" edge="1">
                    <mxGeometry relative="1" as="geometry"/>
                </mxCell>
                <mxCell id="14" style="edgeStyle=none;html=1;exitX=1;exitY=0.5;exitDx=0;exitDy=0;entryX=0;entryY=0.5;entryDx=0;entryDy=0;sketch=1;" parent="1" source="5" target="7" edge="1">
                    <mxGeometry relative="1" as="geometry"/>
                </mxCell>
                <mxCell id="15" style="edgeStyle=none;html=1;exitX=1;exitY=0.5;exitDx=0;exitDy=0;entryX=0;entryY=0.5;entryDx=0;entryDy=0;sketch=1;" parent="1" source="5" target="13" edge="1">
                    <mxGeometry relative="1" as="geometry"/>
                </mxCell>
                <mxCell id="21" style="edgeStyle=none;html=1;exitX=1;exitY=0.5;exitDx=0;exitDy=0;entryX=0;entryY=0.5;entryDx=0;entryDy=0;sketch=1;" parent="1" source="5" target="20" edge="1">
                    <mxGeometry relative="1" as="geometry"/>
                </mxCell>
                <mxCell id="5" value="引用类型" style="rounded=0;whiteSpace=wrap;html=1;comic=1;fillColor=#f8cecc;strokeColor=#b85450;" parent="1" vertex="1">
                    <mxGeometry x="30" y="265" width="80" height="30" as="geometry"/>
                </mxCell>
                <mxCell id="10" style="edgeStyle=none;html=1;exitX=1;exitY=0.5;exitDx=0;exitDy=0;entryX=0;entryY=0.5;entryDx=0;entryDy=0;sketch=1;" parent="1" source="7" target="9" edge="1">
                    <mxGeometry relative="1" as="geometry"/>
                </mxCell>
                <mxCell id="12" style="edgeStyle=none;html=1;exitX=1;exitY=0.5;exitDx=0;exitDy=0;entryX=0;entryY=0.5;entryDx=0;entryDy=0;sketch=1;" parent="1" source="7" target="11" edge="1">
                    <mxGeometry relative="1" as="geometry"/>
                </mxCell>
                <mxCell id="7" value="软引用" style="rounded=0;whiteSpace=wrap;html=1;comic=1;fillColor=#ffe6cc;strokeColor=#d79b00;" parent="1" vertex="1">
                    <mxGeometry x="190" y="207.5" width="80" height="30" as="geometry"/>
                </mxCell>
                <mxCell id="8" value="&lt;div&gt;参考资料：&lt;/div&gt;&lt;div&gt;《深入理解jvm》P110&lt;/div&gt;&lt;div&gt;https://www.bilibili.com/video/BV1yE411Z7AP?p=52&lt;br&gt;&lt;/div&gt;" style="rounded=0;whiteSpace=wrap;html=1;comic=1;fillColor=#ffe6cc;strokeColor=#d79b00;sketch=1;align=left;" parent="1" vertex="1">
                    <mxGeometry x="30" y="15" width="280" height="50" as="geometry"/>
                </mxCell>
                <mxCell id="9" value="&lt;div style=&quot;text-align: left&quot;&gt;被引用对象会被GC回收，回收时机：&lt;/div&gt;&lt;div style=&quot;text-align: left&quot;&gt;&amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp;&lt;b&gt;某次gc后发现内存还是不足，再次gc时&lt;/b&gt;则回收所有只被软引用引用的对象&lt;/div&gt;" style="rounded=0;whiteSpace=wrap;html=1;comic=1;fillColor=#ffe6cc;strokeColor=#d79b00;sketch=1;" parent="1" vertex="1">
                    <mxGeometry x="330" y="215" width="250" height="60" as="geometry"/>
                </mxCell>
                <mxCell id="11" value="用来描述一些还有用，但非必须的对象" style="rounded=0;whiteSpace=wrap;html=1;comic=1;fillColor=#e1d5e7;strokeColor=#9673a6;" parent="1" vertex="1">
                    <mxGeometry x="330" y="177.5" width="250" height="30" as="geometry"/>
                </mxCell>
                <mxCell id="17" style="edgeStyle=none;html=1;exitX=1;exitY=0.5;exitDx=0;exitDy=0;entryX=0;entryY=0.5;entryDx=0;entryDy=0;sketch=1;" parent="1" source="13" target="16" edge="1">
                    <mxGeometry relative="1" as="geometry"/>
                </mxCell>
                <mxCell id="19" style="edgeStyle=none;html=1;exitX=1;exitY=0.5;exitDx=0;exitDy=0;entryX=0;entryY=0.5;entryDx=0;entryDy=0;sketch=1;" parent="1" source="13" target="18" edge="1">
                    <mxGeometry relative="1" as="geometry"/>
                </mxCell>
                <mxCell id="13" value="弱引用" style="rounded=0;whiteSpace=wrap;html=1;comic=1;fillColor=#ffe6cc;strokeColor=#d79b00;" parent="1" vertex="1">
                    <mxGeometry x="190" y="315" width="80" height="30" as="geometry"/>
                </mxCell>
                <mxCell id="16" value="用来描述那些非必须对象，但是它的强度比软引用更弱一些" style="rounded=0;whiteSpace=wrap;html=1;comic=1;fillColor=#e1d5e7;strokeColor=#9673a6;" parent="1" vertex="1">
                    <mxGeometry x="330" y="295" width="320" height="30" as="geometry"/>
                </mxCell>
                <mxCell id="18" value="&lt;div style=&quot;text-align: left&quot;&gt;被引用对象会被GC回收，回收时机：&lt;br&gt;&lt;/div&gt;&lt;div style=&quot;text-align: left&quot;&gt;&amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp;&lt;b&gt;无论内存是否不足，GC都会回收&lt;/b&gt;只被弱引用引用的对象&lt;/div&gt;" style="rounded=0;whiteSpace=wrap;html=1;comic=1;fillColor=#ffe6cc;strokeColor=#d79b00;sketch=1;" parent="1" vertex="1">
                    <mxGeometry x="330" y="335" width="250" height="60" as="geometry"/>
                </mxCell>
                <mxCell id="24" style="edgeStyle=none;html=1;exitX=1;exitY=0.5;exitDx=0;exitDy=0;entryX=0;entryY=0.5;entryDx=0;entryDy=0;sketch=1;" parent="1" source="20" target="22" edge="1">
                    <mxGeometry relative="1" as="geometry"/>
                </mxCell>
                <mxCell id="25" style="edgeStyle=none;html=1;exitX=1;exitY=0.5;exitDx=0;exitDy=0;entryX=0;entryY=0.5;entryDx=0;entryDy=0;sketch=1;" parent="1" source="20" target="23" edge="1">
                    <mxGeometry relative="1" as="geometry"/>
                </mxCell>
                <mxCell id="20" value="虚引用" style="rounded=0;whiteSpace=wrap;html=1;comic=1;fillColor=#ffe6cc;strokeColor=#d79b00;" parent="1" vertex="1">
                    <mxGeometry x="190" y="455" width="80" height="30" as="geometry"/>
                </mxCell>
                <mxCell id="22" value="最弱的一种引用关系" style="rounded=0;whiteSpace=wrap;html=1;comic=1;fillColor=#e1d5e7;strokeColor=#9673a6;" parent="1" vertex="1">
                    <mxGeometry x="330" y="415" width="130" height="30" as="geometry"/>
                </mxCell>
                <mxCell id="23" value="&lt;div style=&quot;text-align: left&quot;&gt;使用虚引用的唯一目的只是为了能&lt;b&gt;在这个对象被收集器回收时收到一个系统通知&lt;/b&gt;。&lt;br&gt;&lt;/div&gt;&lt;div style=&quot;text-align: left&quot;&gt;例如&lt;b&gt;使用ByteBuffer间接使用一块直接内存时&lt;/b&gt;，当ByteBuffer没有被强引用后，对应的&lt;b&gt;虚引用对象会放置到引用队列中&lt;/b&gt;，进而会由ReferenceHandler线程执行虚引用对象(Cleaner)的clean方法，这里是回收直接内存&lt;/div&gt;" style="rounded=0;whiteSpace=wrap;html=1;comic=1;fillColor=#ffe6cc;strokeColor=#d79b00;sketch=1;" parent="1" vertex="1">
                    <mxGeometry x="330" y="455" width="310" height="100" as="geometry"/>
                </mxCell>
                <mxCell id="26" value="&lt;div style=&quot;text-align: left&quot;&gt;即一般用于&lt;b&gt;回收一些不在虚拟机内的资源&lt;/b&gt;&lt;/div&gt;&lt;div style=&quot;text-align: left&quot;&gt;（虚拟机内的对象被gc，引用的外部资源被回收）&lt;/div&gt;" style="rounded=0;whiteSpace=wrap;html=1;comic=1;fillColor=#ffe6cc;strokeColor=#d79b00;sketch=1;" parent="1" vertex="1">
                    <mxGeometry x="650" y="480" width="280" height="50" as="geometry"/>
                </mxCell>
                <mxCell id="31" style="edgeStyle=none;sketch=1;html=1;exitX=1;exitY=0.5;exitDx=0;exitDy=0;entryX=0;entryY=0.5;entryDx=0;entryDy=0;fontSize=11;" parent="1" source="28" target="30" edge="1">
                    <mxGeometry relative="1" as="geometry"/>
                </mxCell>
                <mxCell id="28" value="软引用案例" style="rounded=0;whiteSpace=wrap;html=1;comic=1;fillColor=#ffe6cc;strokeColor=#d79b00;" parent="1" vertex="1">
                    <mxGeometry x="40" y="750" width="90" height="30" as="geometry"/>
                </mxCell>
                <mxCell id="29" value="&lt;div style=&quot;text-align: left&quot;&gt;软引用和弱引用等都可以配合引用队列使用，方法是在创建软引用对象时传入一个ReferenceQueue对象到第二个参数，则&lt;b&gt;当软引用或弱引用对象的referent被回收时，对应的引用对象也会进入安排的引用队列中&lt;/b&gt;&lt;/div&gt;" style="rounded=0;whiteSpace=wrap;html=1;comic=1;fillColor=#ffe6cc;strokeColor=#d79b00;sketch=1;" parent="1" vertex="1">
                    <mxGeometry x="690" y="255" width="250" height="85" as="geometry"/>
                </mxCell>
                <mxCell id="30" value="&lt;pre style=&quot;background-color: rgb(255 , 255 , 255) ; color: rgb(8 , 8 , 8) ; font-family: &amp;#34;consolas&amp;#34; , monospace&quot;&gt;&lt;span style=&quot;color: #0033b3&quot;&gt;public static void &lt;/span&gt;&lt;span style=&quot;color: #795e26&quot;&gt;main&lt;/span&gt;(&lt;span style=&quot;color: #066555&quot;&gt;String&lt;/span&gt;[] args) {&lt;br&gt;    &lt;span style=&quot;color: #6c00d5&quot;&gt;List&lt;/span&gt;&amp;lt;&lt;span style=&quot;color: #066555&quot;&gt;SoftReference&lt;/span&gt;&amp;lt;&lt;span style=&quot;color: #0033b3&quot;&gt;byte&lt;/span&gt;[]&amp;gt;&amp;gt; &lt;span style=&quot;color: #000000&quot;&gt;list &lt;/span&gt;= &lt;span style=&quot;color: #0033b3&quot;&gt;new &lt;/span&gt;&lt;span style=&quot;color: #795e26&quot;&gt;ArrayList&lt;/span&gt;&amp;lt;&amp;gt;();&lt;br&gt;&lt;br&gt;    &lt;span style=&quot;color: #8c8c8c ; font-style: italic&quot;&gt;// &lt;/span&gt;&lt;span style=&quot;color: #8c8c8c ; font-style: italic ; font-family: &amp;#34;宋体&amp;#34; , monospace&quot;&gt;引用队列&lt;br&gt;&lt;/span&gt;&lt;span style=&quot;color: #8c8c8c ; font-style: italic ; font-family: &amp;#34;宋体&amp;#34; , monospace&quot;&gt;    &lt;/span&gt;&lt;span style=&quot;color: #066555&quot;&gt;ReferenceQueue&lt;/span&gt;&amp;lt;&lt;span style=&quot;color: #0033b3&quot;&gt;byte&lt;/span&gt;[]&amp;gt; &lt;span style=&quot;color: #000000&quot;&gt;queue &lt;/span&gt;= &lt;span style=&quot;color: #0033b3&quot;&gt;new &lt;/span&gt;&lt;span style=&quot;color: #795e26&quot;&gt;ReferenceQueue&lt;/span&gt;&amp;lt;&amp;gt;();&lt;br&gt;&lt;br&gt;    &lt;span style=&quot;color: #0033b3&quot;&gt;for &lt;/span&gt;(&lt;span style=&quot;color: #0033b3&quot;&gt;int &lt;/span&gt;i = &lt;span style=&quot;color: #1750eb&quot;&gt;0&lt;/span&gt;; i &amp;lt; &lt;span style=&quot;color: #1750eb&quot;&gt;5&lt;/span&gt;; i++) {&lt;br&gt;        &lt;span style=&quot;color: #8c8c8c ; font-style: italic&quot;&gt;// &lt;/span&gt;&lt;span style=&quot;color: #8c8c8c ; font-style: italic ; font-family: &amp;#34;宋体&amp;#34; , monospace&quot;&gt;关联了引用队列， 当软引用所关联的&lt;/span&gt;&lt;span style=&quot;color: #8c8c8c ; font-style: italic&quot;&gt; byte[]&lt;/span&gt;&lt;span style=&quot;color: #8c8c8c ; font-style: italic ; font-family: &amp;#34;宋体&amp;#34; , monospace&quot;&gt;被回收时，软引用自己会加入到&lt;/span&gt;&lt;span style=&quot;color: #8c8c8c ; font-style: italic&quot;&gt; queue &lt;/span&gt;&lt;span style=&quot;color: #8c8c8c ; font-style: italic ; font-family: &amp;#34;宋体&amp;#34; , monospace&quot;&gt;中去&lt;br&gt;&lt;/span&gt;&lt;span style=&quot;color: #8c8c8c ; font-style: italic ; font-family: &amp;#34;宋体&amp;#34; , monospace&quot;&gt;        &lt;/span&gt;&lt;span style=&quot;color: #066555&quot;&gt;SoftReference&lt;/span&gt;&amp;lt;&lt;span style=&quot;color: #0033b3&quot;&gt;byte&lt;/span&gt;[]&amp;gt; &lt;span style=&quot;color: #000000&quot;&gt;ref &lt;/span&gt;= &lt;span style=&quot;color: #0033b3&quot;&gt;new &lt;/span&gt;&lt;span style=&quot;color: #795e26&quot;&gt;SoftReference&lt;/span&gt;&amp;lt;&amp;gt;(&lt;span style=&quot;color: #0033b3&quot;&gt;new byte&lt;/span&gt;[&lt;span style=&quot;color: #871094 ; font-style: italic&quot;&gt;_4MB&lt;/span&gt;], &lt;span style=&quot;color: #000000&quot;&gt;queue&lt;/span&gt;);&lt;br&gt;        &lt;span style=&quot;color: #066555&quot;&gt;System&lt;/span&gt;.&lt;span style=&quot;color: #871094 ; font-style: italic&quot;&gt;out&lt;/span&gt;.&lt;span style=&quot;color: #795e26&quot;&gt;println&lt;/span&gt;(&lt;span style=&quot;color: #000000&quot;&gt;ref&lt;/span&gt;.&lt;span style=&quot;color: #795e26&quot;&gt;get&lt;/span&gt;());&lt;br&gt;        &lt;span style=&quot;color: #000000&quot;&gt;list&lt;/span&gt;.&lt;span style=&quot;color: #795e26&quot;&gt;add&lt;/span&gt;(&lt;span style=&quot;color: #000000&quot;&gt;ref&lt;/span&gt;);&lt;br&gt;        &lt;span style=&quot;color: #066555&quot;&gt;System&lt;/span&gt;.&lt;span style=&quot;color: #871094 ; font-style: italic&quot;&gt;out&lt;/span&gt;.&lt;span style=&quot;color: #795e26&quot;&gt;println&lt;/span&gt;(&lt;span style=&quot;color: #000000&quot;&gt;list&lt;/span&gt;.&lt;span style=&quot;color: #795e26&quot;&gt;size&lt;/span&gt;());&lt;br&gt;    }&lt;br&gt;&lt;br&gt;    &lt;span style=&quot;color: #8c8c8c ; font-style: italic&quot;&gt;// &lt;/span&gt;&lt;span style=&quot;color: #8c8c8c ; font-style: italic ; font-family: &amp;#34;宋体&amp;#34; , monospace&quot;&gt;从队列中获取无用的 软引用对象，并移除&lt;br&gt;&lt;/span&gt;&lt;span style=&quot;color: #8c8c8c ; font-style: italic ; font-family: &amp;#34;宋体&amp;#34; , monospace&quot;&gt;    &lt;/span&gt;&lt;span style=&quot;color: #066555&quot;&gt;Reference&lt;/span&gt;&amp;lt;? &lt;span style=&quot;color: #0033b3&quot;&gt;extends byte&lt;/span&gt;[]&amp;gt; poll = &lt;span style=&quot;color: #000000&quot;&gt;queue&lt;/span&gt;.&lt;span style=&quot;color: #795e26&quot;&gt;poll&lt;/span&gt;();&lt;br&gt;    &lt;span style=&quot;color: #0033b3&quot;&gt;while&lt;/span&gt;( poll != &lt;span style=&quot;color: #0033b3&quot;&gt;null&lt;/span&gt;) {&lt;br&gt;        &lt;span style=&quot;color: #000000&quot;&gt;list&lt;/span&gt;.&lt;span style=&quot;color: #795e26&quot;&gt;remove&lt;/span&gt;(poll);&lt;br&gt;        poll = &lt;span style=&quot;color: #000000&quot;&gt;queue&lt;/span&gt;.&lt;span style=&quot;color: #795e26&quot;&gt;poll&lt;/span&gt;();&lt;br&gt;    }&lt;br&gt;&lt;br&gt;    &lt;span style=&quot;color: #066555&quot;&gt;System&lt;/span&gt;.&lt;span style=&quot;color: #871094 ; font-style: italic&quot;&gt;out&lt;/span&gt;.&lt;span style=&quot;color: #795e26&quot;&gt;println&lt;/span&gt;(&lt;span style=&quot;color: #067d17 ; font-weight: bold&quot;&gt;&quot;===========================&quot;&lt;/span&gt;);&lt;br&gt;    &lt;span style=&quot;color: #0033b3&quot;&gt;for &lt;/span&gt;(&lt;span style=&quot;color: #066555&quot;&gt;SoftReference&lt;/span&gt;&amp;lt;&lt;span style=&quot;color: #0033b3&quot;&gt;byte&lt;/span&gt;[]&amp;gt; &lt;span style=&quot;color: #000000&quot;&gt;reference &lt;/span&gt;: &lt;span style=&quot;color: #000000&quot;&gt;list&lt;/span&gt;) {&lt;br&gt;        &lt;span style=&quot;color: #066555&quot;&gt;System&lt;/span&gt;.&lt;span style=&quot;color: #871094 ; font-style: italic&quot;&gt;out&lt;/span&gt;.&lt;span style=&quot;color: #795e26&quot;&gt;println&lt;/span&gt;(&lt;span style=&quot;color: #000000&quot;&gt;reference&lt;/span&gt;.&lt;span style=&quot;color: #795e26&quot;&gt;get&lt;/span&gt;());&lt;br&gt;    }&lt;br&gt;&lt;br&gt;}&lt;/pre&gt;" style="rounded=0;whiteSpace=wrap;html=1;comic=1;fillColor=#ffe6cc;strokeColor=#d79b00;align=left;" parent="1" vertex="1">
                    <mxGeometry x="190" y="569" width="560" height="392" as="geometry"/>
                </mxCell>
                <mxCell id="32" value="这个案例只为虚拟机分配了20M的空间&lt;br&gt;① 分配前4个byte数组时顺利分配，约消耗了16M的空间，且各数组被对应的软引用对象所引用&lt;br&gt;② 当分配第5个byte数组时，先进行gc，发现gc后空间还是不够，第二次gc：&lt;br&gt;&amp;nbsp; &amp;nbsp; 1) 将前面的4个软引用对象所引用的4个byte数组的空间都回收掉&lt;br&gt;&amp;nbsp; &amp;nbsp; 2) 然后将4个引用对象放入到引用队列中&lt;br&gt;最后分配第5个byte数组的空间，被软引用对象所引用&lt;br&gt;③ 引用队列中含有4个软引用对象，可以取消掉对它们的强引用，进而可以被gc掉&lt;br&gt;④ 最后打印就只剩下一个软引用对象了" style="rounded=0;whiteSpace=wrap;html=1;comic=1;fillColor=#ffe6cc;strokeColor=#d79b00;align=left;sketch=1;" parent="1" vertex="1">
                    <mxGeometry x="770" y="665" width="290" height="180" as="geometry"/>
                </mxCell>
                <mxCell id="38" style="edgeStyle=none;sketch=1;html=1;exitX=1;exitY=0.5;exitDx=0;exitDy=0;entryX=0;entryY=0.5;entryDx=0;entryDy=0;fontSize=11;" parent="1" source="33" target="34" edge="1">
                    <mxGeometry relative="1" as="geometry"/>
                </mxCell>
                <mxCell id="33" value="虚引用案例" style="rounded=0;whiteSpace=wrap;html=1;comic=1;fillColor=#ffe6cc;strokeColor=#d79b00;" parent="1" vertex="1">
                    <mxGeometry x="40" y="1195" width="90" height="30" as="geometry"/>
                </mxCell>
                <mxCell id="34" value="&lt;pre style=&quot;background-color: rgb(255 , 255 , 255) ; color: rgb(8 , 8 , 8) ; font-family: &amp;#34;consolas&amp;#34; , monospace ; font-size: 11px&quot;&gt;&lt;br&gt;&lt;/pre&gt;" style="rounded=0;whiteSpace=wrap;html=1;comic=1;fillColor=#ffe6cc;strokeColor=#d79b00;align=left;" parent="1" vertex="1">
                    <mxGeometry x="190" y="980" width="480" height="460" as="geometry"/>
                </mxCell>
                <mxCell id="35" value="&lt;pre style=&quot;background-color: rgb(255 , 255 , 255) ; font-family: &amp;#34;consolas&amp;#34; , monospace&quot;&gt;&lt;pre style=&quot;font-family: &amp;#34;consolas&amp;#34; , monospace&quot;&gt;&lt;span style=&quot;color: rgb(121 , 94 , 38)&quot;&gt;DirectByteBuffer&lt;/span&gt;&lt;font color=&quot;#080808&quot; style=&quot;font-size: 12px&quot;&gt;(&lt;/font&gt;&lt;span style=&quot;color: rgb(0 , 51 , 179)&quot;&gt;int &lt;/span&gt;&lt;font color=&quot;#080808&quot; style=&quot;font-size: 12px&quot;&gt;cap) {  &lt;/font&gt;&lt;span style=&quot;color: rgb(140 , 140 , 140) ; font-style: italic&quot;&gt;// package-private&lt;/span&gt;&lt;span style=&quot;color: rgb(140 , 140 , 140) ; font-style: italic&quot;&gt;&lt;br&gt;&lt;/span&gt;&lt;span style=&quot;color: rgb(140 , 140 , 140) ; font-style: italic&quot;&gt;    &lt;/span&gt;&lt;span style=&quot;color: rgb(0 , 51 , 179)&quot;&gt;super&lt;/span&gt;&lt;font color=&quot;#080808&quot; style=&quot;font-size: 12px&quot;&gt;(-&lt;/font&gt;&lt;span style=&quot;color: rgb(23 , 80 , 235)&quot;&gt;1&lt;/span&gt;&lt;font color=&quot;#080808&quot; style=&quot;font-size: 12px&quot;&gt;, &lt;/font&gt;&lt;span style=&quot;color: rgb(23 , 80 , 235)&quot;&gt;0&lt;/span&gt;&lt;font color=&quot;#080808&quot; style=&quot;font-size: 12px&quot;&gt;, cap, cap);&lt;br&gt;    &lt;/font&gt;&lt;font color=&quot;#0033b3&quot; style=&quot;font-size: 12px&quot;&gt;...&lt;/font&gt;&lt;font color=&quot;#080808&quot; style=&quot;font-size: 12px&quot;&gt;&lt;br&gt;    &lt;/font&gt;&lt;span style=&quot;color: rgb(135 , 16 , 148)&quot;&gt;cleaner &lt;/span&gt;&lt;font color=&quot;#080808&quot; style=&quot;font-size: 12px&quot;&gt;= &lt;/font&gt;&lt;span style=&quot;color: rgb(6 , 101 , 85)&quot;&gt;Cleaner&lt;/span&gt;&lt;font color=&quot;#080808&quot; style=&quot;font-size: 12px&quot;&gt;.&lt;/font&gt;&lt;span style=&quot;color: rgb(8 , 8 , 8) ; font-style: italic&quot;&gt;create&lt;/span&gt;&lt;font color=&quot;#080808&quot; style=&quot;font-size: 12px&quot;&gt;(&lt;/font&gt;&lt;span style=&quot;color: rgb(0 , 51 , 179)&quot;&gt;this&lt;/span&gt;&lt;font color=&quot;#080808&quot; style=&quot;font-size: 12px&quot;&gt;, &lt;/font&gt;&lt;span style=&quot;color: rgb(0 , 51 , 179)&quot;&gt;new &lt;/span&gt;&lt;span style=&quot;color: rgb(121 , 94 , 38)&quot;&gt;Deallocator&lt;/span&gt;&lt;font color=&quot;#080808&quot; style=&quot;font-size: 12px&quot;&gt;(base, &lt;/font&gt;&lt;span style=&quot;color: rgb(0 , 0 , 0)&quot;&gt;size&lt;/span&gt;&lt;font color=&quot;#080808&quot; style=&quot;font-size: 12px&quot;&gt;, cap));&lt;br&gt;    &lt;/font&gt;&lt;span style=&quot;color: rgb(135 , 16 , 148)&quot;&gt;att &lt;/span&gt;&lt;font color=&quot;#080808&quot; style=&quot;font-size: 12px&quot;&gt;= &lt;/font&gt;&lt;span style=&quot;color: rgb(0 , 51 , 179)&quot;&gt;null&lt;/span&gt;&lt;font color=&quot;#080808&quot; style=&quot;font-size: 12px&quot;&gt;;&lt;br&gt;}&lt;/font&gt;&lt;/pre&gt;&lt;/pre&gt;" style="rounded=0;whiteSpace=wrap;html=1;comic=1;fillColor=#dae8fc;strokeColor=#6c8ebf;align=left;" parent="1" vertex="1">
                    <mxGeometry x="200" y="1016" width="460" height="90" as="geometry"/>
                </mxCell>
                <mxCell id="36" value="&lt;pre style=&quot;background-color: rgb(255 , 255 , 255) ; font-family: &amp;#34;consolas&amp;#34; , monospace ; font-size: 11px&quot;&gt;&lt;pre style=&quot;font-family: &amp;#34;consolas&amp;#34; , monospace ; font-size: 12px&quot;&gt;&lt;pre style=&quot;font-family: &amp;#34;consolas&amp;#34; , monospace&quot;&gt;&lt;span style=&quot;color: rgb(8 , 8 , 8)&quot;&gt;&lt;span style=&quot;color: #0033b3&quot;&gt;public class &lt;/span&gt;&lt;span style=&quot;color: #066555&quot;&gt;Cleaner &lt;/span&gt;&lt;span style=&quot;color: #0033b3&quot;&gt;extends &lt;/span&gt;&lt;span style=&quot;color: #066555&quot;&gt;PhantomReference&lt;/span&gt;&amp;lt;&lt;span style=&quot;color: #066555&quot;&gt;Object&lt;/span&gt;&amp;gt; {&lt;br&gt;    &lt;/span&gt;&lt;font color=&quot;#0033b3&quot; style=&quot;font-size: 12px&quot;&gt;...&lt;/font&gt;&lt;font color=&quot;#080808&quot; style=&quot;font-size: 12px&quot;&gt;&lt;br&gt;    &lt;/font&gt;&lt;span style=&quot;color: rgb(0 , 51 , 179)&quot;&gt;public static &lt;/span&gt;&lt;span style=&quot;color: rgb(6 , 101 , 85)&quot;&gt;Cleaner &lt;/span&gt;&lt;span style=&quot;color: rgb(121 , 94 , 38)&quot;&gt;create&lt;/span&gt;&lt;font color=&quot;#080808&quot; style=&quot;font-size: 12px&quot;&gt;(&lt;/font&gt;&lt;span style=&quot;color: rgb(6 , 101 , 85)&quot;&gt;Object &lt;/span&gt;&lt;font color=&quot;#080808&quot; style=&quot;font-size: 12px&quot;&gt;var0, &lt;/font&gt;&lt;span style=&quot;color: rgb(108 , 0 , 213)&quot;&gt;Runnable &lt;/span&gt;&lt;font color=&quot;#080808&quot; style=&quot;font-size: 12px&quot;&gt;var1) {&lt;br&gt;        &lt;/font&gt;&lt;span style=&quot;color: rgb(0 , 51 , 179)&quot;&gt;return &lt;/span&gt;&lt;font color=&quot;#080808&quot; style=&quot;font-size: 12px&quot;&gt;var1 == &lt;/font&gt;&lt;span style=&quot;color: rgb(0 , 51 , 179)&quot;&gt;null &lt;/span&gt;&lt;font color=&quot;#080808&quot; style=&quot;font-size: 12px&quot;&gt;? &lt;/font&gt;&lt;span style=&quot;color: rgb(0 , 51 , 179)&quot;&gt;null &lt;/span&gt;&lt;font color=&quot;#080808&quot; style=&quot;font-size: 12px&quot;&gt;: &lt;/font&gt;&lt;span style=&quot;color: rgb(8 , 8 , 8) ; font-style: italic&quot;&gt;add&lt;/span&gt;&lt;font color=&quot;#080808&quot; style=&quot;font-size: 12px&quot;&gt;(&lt;/font&gt;&lt;span style=&quot;color: rgb(0 , 51 , 179)&quot;&gt;new &lt;/span&gt;&lt;span style=&quot;color: rgb(121 , 94 , 38)&quot;&gt;Cleaner&lt;/span&gt;&lt;font color=&quot;#080808&quot; style=&quot;font-size: 12px&quot;&gt;(var0, var1));&lt;br&gt;    }&lt;/font&gt;&lt;/pre&gt;&lt;/pre&gt;&lt;/pre&gt;" style="rounded=0;whiteSpace=wrap;html=1;comic=1;fillColor=#dae8fc;strokeColor=#6c8ebf;align=left;" parent="1" vertex="1">
                    <mxGeometry x="200" y="1113" width="440" height="77" as="geometry"/>
                </mxCell>
                <mxCell id="37" value="&lt;pre style=&quot;background-color: rgb(255 , 255 , 255) ; font-family: &amp;#34;consolas&amp;#34; , monospace ; font-size: 11px&quot;&gt;&lt;pre style=&quot;font-family: &amp;#34;consolas&amp;#34; , monospace&quot;&gt;&lt;pre style=&quot;font-family: &amp;#34;consolas&amp;#34; , monospace ; font-size: 12px&quot;&gt;&lt;pre style=&quot;color: rgb(8 , 8 , 8) ; font-family: &amp;#34;consolas&amp;#34; , monospace&quot;&gt;&lt;span style=&quot;color: #0033b3&quot;&gt;private static class &lt;/span&gt;&lt;span style=&quot;color: #066555&quot;&gt;Deallocator&lt;br&gt;&lt;/span&gt;&lt;span style=&quot;color: #066555&quot;&gt;    &lt;/span&gt;&lt;span style=&quot;color: #0033b3&quot;&gt;implements &lt;/span&gt;&lt;span style=&quot;color: #6c00d5&quot;&gt;Runnable&lt;br&gt;&lt;/span&gt;{&lt;br&gt;    &lt;span style=&quot;color: #0033b3&quot;&gt;private static &lt;/span&gt;&lt;span style=&quot;color: #066555&quot;&gt;Unsafe &lt;/span&gt;&lt;span style=&quot;color: #871094 ; font-style: italic&quot;&gt;unsafe &lt;/span&gt;= &lt;span style=&quot;color: #066555&quot;&gt;Unsafe&lt;/span&gt;.&lt;span style=&quot;font-style: italic&quot;&gt;getUnsafe&lt;/span&gt;();&lt;br&gt;    ...&lt;br&gt;&lt;br&gt;    &lt;span style=&quot;color: #0033b3&quot;&gt;public void &lt;/span&gt;&lt;span style=&quot;color: #795e26&quot;&gt;run&lt;/span&gt;() {&lt;br&gt;        &lt;span style=&quot;color: #0033b3&quot;&gt;if &lt;/span&gt;(&lt;span style=&quot;color: #871094&quot;&gt;address &lt;/span&gt;== &lt;span style=&quot;color: #1750eb&quot;&gt;0&lt;/span&gt;) {&lt;br&gt;            &lt;span style=&quot;color: #8c8c8c ; font-style: italic&quot;&gt;// Paranoia&lt;br&gt;&lt;/span&gt;&lt;span style=&quot;color: #8c8c8c ; font-style: italic&quot;&gt;            &lt;/span&gt;&lt;span style=&quot;color: #0033b3&quot;&gt;return&lt;/span&gt;;&lt;br&gt;        }&lt;br&gt;        &lt;span style=&quot;color: #871094 ; font-style: italic&quot;&gt;unsafe&lt;/span&gt;.&lt;span style=&quot;color: #795e26&quot;&gt;freeMemory&lt;/span&gt;(&lt;span style=&quot;color: #871094&quot;&gt;address&lt;/span&gt;); // &amp;lt;--&lt;br&gt;        &lt;span style=&quot;color: #871094&quot;&gt;address &lt;/span&gt;= &lt;span style=&quot;color: #1750eb&quot;&gt;0&lt;/span&gt;;&lt;br&gt;        &lt;span style=&quot;color: #066555&quot;&gt;Bits&lt;/span&gt;.&lt;span style=&quot;font-style: italic&quot;&gt;unreserveMemory&lt;/span&gt;(&lt;span style=&quot;color: #871094&quot;&gt;size&lt;/span&gt;, &lt;span style=&quot;color: #871094&quot;&gt;capacity&lt;/span&gt;);&lt;br&gt;    }&lt;br&gt;}&lt;/pre&gt;&lt;/pre&gt;&lt;/pre&gt;&lt;/pre&gt;" style="rounded=0;whiteSpace=wrap;html=1;comic=1;fillColor=#dae8fc;strokeColor=#6c8ebf;align=left;" parent="1" vertex="1">
                    <mxGeometry x="200" y="1198" width="360" height="237" as="geometry"/>
                </mxCell>
                <mxCell id="39" value="DirectByteBuffer" style="rounded=0;whiteSpace=wrap;html=1;comic=1;fillColor=#d5e8d4;strokeColor=#82b366;" parent="1" vertex="1">
                    <mxGeometry x="190" y="980" width="140" height="30" as="geometry"/>
                </mxCell>
                <mxCell id="40" value="DirectByteBuffer类中维护一个cleaner对象，它的类型是Cleaner，为虚引用PhantomReference的子类型。在创建cleaner对象时传入一个Deallocator对象(实现Runnable接口)，该对象的run()方法会在下面的过程调用：&lt;br&gt;① cleaner所引用的对象(即ByteBuffer对象)被gc&lt;br&gt;② cleaner移动到引用队列&lt;br&gt;③ ReferenceHandler线程执行cleaner.clean()&lt;br&gt;④ 在clean()方法内部执行run()方法回收掉直接内存" style="rounded=0;whiteSpace=wrap;html=1;comic=1;fillColor=#ffe6cc;strokeColor=#d79b00;align=left;sketch=1;" parent="1" vertex="1">
                    <mxGeometry x="680" y="1190" width="310" height="143" as="geometry"/>
                </mxCell>
            </root>
        </mxGraphModel>
    </diagram>
</mxfile>